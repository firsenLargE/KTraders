# ==============================
# Database Configuration
# ==============================

# Use environment variables (works on Render/Neon and locally with docker-compose)
spring.datasource.url=${DB_URL}
spring.datasource.username=${DB_USER}
spring.datasource.password=${DB_PASS}
spring.datasource.driver-class-name=org.postgresql.Driver

# ==============================
# JPA / Hibernate
# ==============================
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true

# ==============================
# File Upload Configuration
# ==============================
spring.servlet.multipart.max-file-size=10MB
spring.servlet.multipart.max-request-size=10MB

# Directory for uploaded images/files
# On Render → UPLOAD_DIR=/var/tmp/uploads
# Locally (docker-compose) → ./uploads
app.upload.dir=${UPLOAD_DIR:/tmp/uploads}

# ==============================
# Thymeleaf Configuration
# ==============================
spring.thymeleaf.cache=true
spring.thymeleaf.prefix=classpath:/templates/
spring.thymeleaf.suffix=.html

# ==============================
# Server Configuration
# ==============================
server.port=${PORT:8080}
server.servlet.context-path=/

# ==============================
# Logging Configuration
# ==============================
logging.level.com.example.demo=INFO
logging.level.org.springframework.web=INFO
logging.level.org.hibernate.SQL=DEBUG

# ==============================
# Application Settings
# ==============================
app.forecast.confidence.threshold=0.6
app.forecast.seasons.enabled=true
app.reorder.threshold=10

# ==============================
# Error Handling
# ==============================
server.error.include-message=always
server.error.include-stacktrace=always

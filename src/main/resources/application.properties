# ==============================
# Database Configuration
# ==============================

# Use H2 file-based DB in production (so it works on Render free tier without card)
spring.datasource.url=jdbc:h2:file:./data/kapiltraders;AUTO_SERVER=TRUE;MODE=PostgreSQL
spring.datasource.driver-class-name=org.h2.Driver
spring.datasource.username=sa
spring.datasource.password=

# Later, switch to Neon/Supabase PostgreSQL by uncommenting:
# spring.datasource.url=${DB_URL}
# spring.datasource.username=${DB_USER}
# spring.datasource.password=${DB_PASS}
# spring.datasource.driver-class-name=org.postgresql.Driver

# ==============================
# JPA / Hibernate
# ==============================
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true

# ==============================
# File Upload Configuration
# ==============================
spring.servlet.multipart.max-file-size=10MB
spring.servlet.multipart.max-request-size=10MB

# Directory for uploaded images/files (set in Render as UPLOAD_DIR=/tmp/uploads)
app.upload.dir=${UPLOAD_DIR:/tmp/uploads}

# ==============================
# Thymeleaf Configuration
# ==============================
spring.thymeleaf.cache=true
spring.thymeleaf.prefix=classpath:/templates/
spring.thymeleaf.suffix=.html

# ==============================
# Server Configuration
# ==============================
server.port=${PORT:8080}
server.servlet.context-path=/

# ==============================
# Logging Configuration
# ==============================
logging.level.com.example.demo=INFO
logging.level.org.springframework.web=INFO
logging.level.org.hibernate.SQL=DEBUG

# ==============================
# Application Settings
# ==============================
app.forecast.confidence.threshold=0.6
app.forecast.seasons.enabled=true
app.reorder.threshold=10

# ==============================
# Error Handling
# ==============================
server.error.include-message=always
server.error.include-stacktrace=always
